---
export interface Props {
  hero: {
    title: string
    subtitle?: string
    description?: string
    cta?: {
      primary: {
        text: string
        href: string
      }
      secondary?: {
        text: string
        href: string
      }
    }
  }
}

const { hero } = Astro.props
---

<section class="relative bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900 text-white overflow-hidden">
  <div class="absolute inset-0 bg-gradient-to-r from-black/50 to-transparent"></div>
  
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32">
    <div class="max-w-4xl">
      <div class="space-y-6">
        {hero.subtitle && (
          <div class="inline-flex items-center px-4 py-2 bg-purple-600/20 backdrop-blur-sm border border-purple-400/30 rounded-full text-purple-200 text-sm font-medium">
            {hero.subtitle}
          </div>
        )}
        
        <h1 class="text-4xl lg:text-6xl font-bold leading-tight">
          {hero.title.includes('Geppetto') ? (
            <Fragment>
              {hero.title.split('Geppetto')[0]}
              <span class="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
                Geppetto{hero.title.split('Geppetto')[1] || ''}
              </span>
            </Fragment>
          ) : (
            hero.title
          )}
        </h1>
        
        {hero.description && (
          <p class="text-xl lg:text-2xl text-gray-300 leading-relaxed max-w-3xl" 
             set:html={hero.description.replace(/\n/g, '<br/>')} />
        )}
        
        {hero.cta && (
          <div class="flex flex-col sm:flex-row gap-4 pt-6">
            <a 
              href={hero.cta.primary.href}
              class="inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-500 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-blue-600 transition-all duration-200 shadow-lg"
            >
              {hero.cta.primary.text}
            </a>
            
            {hero.cta.secondary && (
              <a 
                href={hero.cta.secondary.href}
                class="inline-flex items-center justify-center px-8 py-4 border-2 border-purple-400 text-purple-200 font-semibold rounded-lg hover:bg-purple-600/10 transition-colors duration-200"
              >
                {hero.cta.secondary.text}
              </a>
            )}
          </div>
        )}
      </div>
    </div>
  </div>
</section>