---
export interface Props {
  hero: {
    title: string
    subtitle?: string
    description?: string
    image?: string
    cta?: {
      primary: {
        text: string
        href: string
      }
      secondary?: {
        text: string
        href: string
      }
    }
  }
  features?: Array<{
    title: string
    description: string
    icon?: string
  }>
  language?: 'zh' | 'en'
}

const { hero, features, language = 'zh' } = Astro.props

// 多语言文本配置
const text = {
  zh: {
    quoteProcess: 'AI智能报价流程',
    steps: [
      {
        title: 'AI智能分析',
        status: '已完成 - 2分钟'
      },
      {
        title: '专家技术复核', 
        status: '进行中 - 4-8小时内完成'
      },
      {
        title: '精确报价发送',
        status: '邮件通知'
      }
    ],
    precision: '精度保证',
    delivery: '极速交付'
  },
  en: {
    quoteProcess: 'AI Smart Quote Process',
    steps: [
      {
        title: 'AI Smart Analysis',
        status: 'Completed - 2 minutes'
      },
      {
        title: 'Expert Technical Review',
        status: 'In Progress - 4-8 hours'
      },
      {
        title: 'Precise Quote Delivery',
        status: 'Email notification'
      }
    ],
    precision: 'Precision Guarantee',
    delivery: 'Express Delivery'
  }
}

const currentText = text[language]
---

<section class="relative bg-gradient-to-br from-purple-50 via-blue-50 to-white overflow-hidden">
  <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-blue-500/10"></div>
  
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Left Content -->
      <div class="space-y-8">
        <div class="space-y-4">
          {hero.subtitle && (
            <div class="inline-flex items-center px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-medium">
              {hero.subtitle}
            </div>
          )}
          
          <h1 class="text-4xl lg:text-6xl font-bold text-gray-900 leading-tight">
            {hero.title.includes('Geppetto') ? (
              <Fragment>
                {hero.title.split('Geppetto')[0]}
                <span class="bg-gradient-to-r from-purple-600 to-blue-500 bg-clip-text text-transparent">
                  Geppetto{hero.title.split('Geppetto')[1] || ''}
                </span>
              </Fragment>
            ) : (
              hero.title
            )}
          </h1>
          
          {hero.description && (
            <p class="text-xl text-gray-600 leading-relaxed" set:html={hero.description.replace(/\n/g, '<br/>')} />
          )}
        </div>
        
        <!-- CTA Buttons -->
        {hero.cta && (
          <div class="flex flex-col sm:flex-row gap-4">
            <a 
              href={hero.cta.primary.href}
              class="inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-500 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-blue-600 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
            >
              {hero.cta.primary.text}
            </a>
            
            {hero.cta.secondary && (
              <a 
                href={hero.cta.secondary.href}
                class="inline-flex items-center justify-center px-8 py-4 border-2 border-purple-200 text-purple-600 font-semibold rounded-lg hover:bg-purple-50 transition-colors duration-200"
              >
                {hero.cta.secondary.text}
              </a>
            )}
          </div>
        )}
        
        <!-- Trust Indicators -->
        {features && (
          <div class="flex flex-wrap items-center gap-6 text-sm text-gray-500">
            {features.map((feature) => (
              <div class="flex items-center space-x-2">
                <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                <span>{feature.title}</span>
              </div>
            ))}
          </div>
        )}
      </div>
      
      <!-- Right Content - Visual -->
      <div class="relative">
        <!-- Hero Video -->
        <div class="relative rounded-2xl overflow-hidden shadow-2xl mb-6">
          <video 
            class="w-full h-64 lg:h-80 object-cover" 
            autoplay 
            muted 
            loop 
            playsinline
            poster="/images/manufacturing/cnc-operator.jpg"
          >
            <source src="/videos/hero-manufacturing.mp4" type="video/mp4">
            <!-- Fallback image if video fails to load -->
            <img src="/images/manufacturing/cnc-operator.jpg" alt="AI驱动精密制造" class="w-full h-64 lg:h-80 object-cover">
          </video>
          
          <!-- Video overlay -->
          <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
          
          <!-- Video play button (optional) -->
          <div class="absolute inset-0 flex items-center justify-center">
            <div class="bg-white/90 backdrop-blur-sm rounded-full p-3 shadow-lg">
              <div class="text-purple-600 text-2xl">🤖</div>
            </div>
          </div>
        </div>
        
        <div class="bg-white rounded-2xl shadow-2xl p-6">
          <div class="space-y-6">
            <!-- Process Steps -->
            <div class="space-y-4">
              <h3 class="text-lg font-semibold text-gray-900">{currentText.quoteProcess}</h3>
              
              <div class="space-y-3">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center text-sm font-semibold">✓</div>
                  <div class="flex-1">
                    <div class="text-sm font-medium text-gray-900">{currentText.steps[0].title}</div>
                    <div class="text-xs text-gray-500">{currentText.steps[0].status}</div>
                  </div>
                </div>
                
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold">2</div>
                  <div class="flex-1">
                    <div class="text-sm font-medium text-gray-900">{currentText.steps[1].title}</div>
                    <div class="text-xs text-gray-500">{currentText.steps[1].status}</div>
                  </div>
                </div>
                
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-gray-100 text-gray-400 rounded-full flex items-center justify-center text-sm font-semibold">3</div>
                  <div class="flex-1">
                    <div class="text-sm font-medium text-gray-500">{currentText.steps[2].title}</div>
                    <div class="text-xs text-gray-500">{currentText.steps[2].status}</div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Quick Stats -->
            <div class="grid grid-cols-2 gap-4 pt-4 border-t border-gray-100">
              <div class="text-center">
                <div class="text-2xl font-bold text-purple-600">±0.05mm</div>
                <div class="text-xs text-gray-500">{currentText.precision}</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-500">24h</div>
                <div class="text-xs text-gray-500">{currentText.delivery}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>